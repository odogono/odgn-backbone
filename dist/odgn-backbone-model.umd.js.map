{"version":3,"file":null,"sources":["../src/events.js","../src/utils.js","../src/model.js","../src/collection.js","../src/index.js"],"sourcesContent":["import _ from 'underscore';\n\n// Backbone.Events\n// ---------------\n\n// A module that can be mixed in to *any object* in order to provide it with\n// a custom event channel. You may bind a callback to an event with `on` or\n// remove with `off`; `trigger`-ing an event fires all callbacks in\n// succession.\n//\n//     var object = {};\n//     _.extend(object, Backbone.Events);\n//     object.on('expand', function(){ alert('expanded'); });\n//     object.trigger('expand');\n//\n// var Events = Backbone.Events = {};\nexport const Events = {};\n\n// Regular expression used to split event strings.\nvar eventSplitter = /\\s+/;\n\n// Iterates over the standard `event, callback` (as well as the fancy multiple\n// space-separated events `\"change blur\", callback` and jQuery-style event\n// maps `{event: callback}`).\nvar eventsApi = function(iteratee, events, name, callback, opts) {\n  var i = 0, names;\n  if (name && typeof name === 'object') {\n    // Handle event maps.\n    if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;\n    for (names = _.keys(name); i < names.length ; i++) {\n      events = eventsApi(iteratee, events, names[i], name[names[i]], opts);\n    }\n  } else if (name && eventSplitter.test(name)) {\n    // Handle space-separated event names by delegating them individually.\n    for (names = name.split(eventSplitter); i < names.length; i++) {\n      events = iteratee(events, names[i], callback, opts);\n    }\n  } else {\n    // Finally, standard events.\n    events = iteratee(events, name, callback, opts);\n  }\n  return events;\n};\n\n// Bind an event to a `callback` function. Passing `\"all\"` will bind\n// the callback to all events fired.\nEvents.on = function(name, callback, context) {\n  return internalOn(this, name, callback, context);\n};\n\n// Guard the `listening` argument from the public API.\nvar internalOn = function(obj, name, callback, context, listening) {\n  obj._events = eventsApi(onApi, obj._events || {}, name, callback, {\n    context: context,\n    ctx: obj,\n    listening: listening\n  });\n\n  if (listening) {\n    var listeners = obj._listeners || (obj._listeners = {});\n    listeners[listening.id] = listening;\n  }\n\n  return obj;\n};\n\n// Inversion-of-control versions of `on`. Tell *this* object to listen to\n// an event in another object... keeping track of what it's listening to\n// for easier unbinding later.\nEvents.listenTo = function(obj, name, callback) {\n  if (!obj) return this;\n  var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n  var listeningTo = this._listeningTo || (this._listeningTo = {});\n  var listening = listeningTo[id];\n\n  // This object is not listening to any other events on `obj` yet.\n  // Setup the necessary references to track the listening callbacks.\n  if (!listening) {\n    var thisId = this._listenId || (this._listenId = _.uniqueId('l'));\n    listening = listeningTo[id] = {obj: obj, objId: id, id: thisId, listeningTo: listeningTo, count: 0};\n  }\n\n  // Bind callbacks on obj, and keep track of them on listening.\n  internalOn(obj, name, callback, this, listening);\n  return this;\n};\n\n// The reducing API that adds a callback to the `events` object.\nvar onApi = function(events, name, callback, options) {\n  if (callback) {\n    var handlers = events[name] || (events[name] = []);\n    var context = options.context, ctx = options.ctx, listening = options.listening;\n    if (listening) listening.count++;\n\n    handlers.push({callback: callback, context: context, ctx: context || ctx, listening: listening});\n  }\n  return events;\n};\n\n// Remove one or many callbacks. If `context` is null, removes all\n// callbacks with that function. If `callback` is null, removes all\n// callbacks for the event. If `name` is null, removes all bound\n// callbacks for all events.\nEvents.off = function(name, callback, context) {\n  if (!this._events) return this;\n  this._events = eventsApi(offApi, this._events, name, callback, {\n    context: context,\n    listeners: this._listeners\n  });\n  return this;\n};\n\n// Tell this object to stop listening to either specific events ... or\n// to every object it's currently listening to.\nEvents.stopListening = function(obj, name, callback) {\n  var listeningTo = this._listeningTo;\n  if (!listeningTo) return this;\n\n  var ids = obj ? [obj._listenId] : _.keys(listeningTo);\n\n  for (var i = 0; i < ids.length; i++) {\n    var listening = listeningTo[ids[i]];\n\n    // If listening doesn't exist, this object is not currently\n    // listening to obj. Break out early.\n    if (!listening) break;\n\n    listening.obj.off(name, callback, this);\n  }\n\n  return this;\n};\n\n// The reducing API that removes a callback from the `events` object.\nvar offApi = function(events, name, callback, options) {\n  if (!events) return;\n\n  var i = 0, listening;\n  var context = options.context, listeners = options.listeners;\n\n  // Delete all events listeners and \"drop\" events.\n  if (!name && !callback && !context) {\n    var ids = _.keys(listeners);\n    for (; i < ids.length; i++) {\n      listening = listeners[ids[i]];\n      delete listeners[listening.id];\n      delete listening.listeningTo[listening.objId];\n    }\n    return;\n  }\n\n  var names = name ? [name] : _.keys(events);\n  for (; i < names.length; i++) {\n    name = names[i];\n    var handlers = events[name];\n\n    // Bail out if there are no events stored.\n    if (!handlers) break;\n\n    // Replace events if there are any remaining.  Otherwise, clean up.\n    var remaining = [];\n    for (var j = 0; j < handlers.length; j++) {\n      var handler = handlers[j];\n      if (\n        callback && callback !== handler.callback &&\n          callback !== handler.callback._callback ||\n            context && context !== handler.context\n      ) {\n        remaining.push(handler);\n      } else {\n        listening = handler.listening;\n        if (listening && --listening.count === 0) {\n          delete listeners[listening.id];\n          delete listening.listeningTo[listening.objId];\n        }\n      }\n    }\n\n    // Update tail event if the list has any events.  Otherwise, clean up.\n    if (remaining.length) {\n      events[name] = remaining;\n    } else {\n      delete events[name];\n    }\n  }\n  return events;\n};\n\n// Bind an event to only be triggered a single time. After the first time\n// the callback is invoked, its listener will be removed. If multiple events\n// are passed in using the space-separated syntax, the handler will fire\n// once for each event, not once for a combination of all events.\nEvents.once = function(name, callback, context) {\n  // Map the event into a `{event: once}` object.\n  var events = eventsApi(onceMap, {}, name, callback, _.bind(this.off, this));\n  if (typeof name === 'string' && context == null) callback = void 0;\n  return this.on(events, callback, context);\n};\n\n// Inversion-of-control versions of `once`.\nEvents.listenToOnce = function(obj, name, callback) {\n  // Map the event into a `{event: once}` object.\n  var events = eventsApi(onceMap, {}, name, callback, _.bind(this.stopListening, this, obj));\n  return this.listenTo(obj, events);\n};\n\n// Reduces the event callbacks into a map of `{event: onceWrapper}`.\n// `offer` unbinds the `onceWrapper` after it has been called.\nvar onceMap = function(map, name, callback, offer) {\n  if (callback) {\n    var once = map[name] = _.once(function() {\n      offer(name, once);\n      callback.apply(this, arguments);\n    });\n    once._callback = callback;\n  }\n  return map;\n};\n\n// Trigger one or many events, firing all bound callbacks. Callbacks are\n// passed the same arguments as `trigger` is, apart from the event name\n// (unless you're listening on `\"all\"`, which will cause your callback to\n// receive the true name of the event as the first argument).\nEvents.trigger = function(name) {\n  if (!this._events) return this;\n\n  var length = Math.max(0, arguments.length - 1);\n  var args = Array(length);\n  for (var i = 0; i < length; i++) args[i] = arguments[i + 1];\n\n  eventsApi(triggerApi, this._events, name, void 0, args);\n  return this;\n};\n\n// Handles triggering the appropriate event callbacks.\nvar triggerApi = function(objEvents, name, callback, args) {\n  if (objEvents) {\n    var events = objEvents[name];\n    var allEvents = objEvents.all;\n    if (events && allEvents) allEvents = allEvents.slice();\n    if (events) triggerEvents(events, args);\n    if (allEvents) triggerEvents(allEvents, [name].concat(args));\n  }\n  return objEvents;\n};\n\n// A difficult-to-believe, but optimized internal dispatch function for\n// triggering events. Tries to keep the usual cases speedy (most internal\n// Backbone events have 3 arguments).\nvar triggerEvents = function(events, args) {\n  var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n  switch (args.length) {\n    case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n    case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n    case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n    case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n    default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;\n  }\n};\n\n// Aliases for backwards compatibility.\nEvents.bind   = Events.on;\nEvents.unbind = Events.off;\n\n// Allow the `Backbone` object to serve as a global event bus, for folks who\n// want global \"pubsub\" in a convenient place.\n// _.extend(Backbone, Events);\nexport default Events;","import _ from 'underscore';\n\n// Create a local reference to a common array method we'll want to use later.\nconst slice = Array.prototype.slice;\n\n// Proxy Backbone class methods to Underscore functions, wrapping the model's\n// `attributes` object or collection's `models` array behind the scenes.\n//\n// collection.filter(function(model) { return model.get('age') > 10 });\n// collection.each(this.addView);\n//\n// `Function#apply` can be slow so we use the method's arg count, if we know it.\nvar addMethod = function(length, method, attribute) {\n  switch (length) {\n    case 1: return function() {\n      return _[method](this[attribute]);\n    };\n    case 2: return function(value) {\n      return _[method](this[attribute], value);\n    };\n    case 3: return function(iteratee, context) {\n      return _[method](this[attribute], cb(iteratee, this), context);\n    };\n    case 4: return function(iteratee, defaultVal, context) {\n      return _[method](this[attribute], cb(iteratee, this), defaultVal, context);\n    };\n    default: return function() {\n      var args = slice.call(arguments);\n      args.unshift(this[attribute]);\n      return _[method].apply(_, args);\n    };\n  }\n};\n\nexport var addUnderscoreMethods = function(Class, methods, attribute) {\n  _.each(methods, function(length, method) {\n    if (_[method]) Class.prototype[method] = addMethod(length, method, attribute);\n  });\n};\n\n// Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.\nvar cb = function(iteratee, instance) {\n  if (_.isFunction(iteratee)) return iteratee;\n  if (_.isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);\n  if (_.isString(iteratee)) return function(model) { return model.get(iteratee); };\n  return iteratee;\n};\nvar modelMatcher = function(attrs) {\n  var matcher = _.matches(attrs);\n  return function(model) {\n    return matcher(model.attributes);\n  };\n};\n\n// Helpers\n// -------\n\n// Helper function to correctly set up the prototype chain for subclasses.\n// Similar to `goog.inherits`, but uses a hash of prototype properties and\n// class properties to be extended.\nexport var extend = function(protoProps, staticProps) {\n  var parent = this;\n  var child;\n\n  // The constructor function for the new subclass is either defined by you\n  // (the \"constructor\" property in your `extend` definition), or defaulted\n  // by us to simply call the parent constructor.\n  if (protoProps && _.has(protoProps, 'constructor')) {\n    child = protoProps.constructor;\n  } else {\n    child = function(){ return parent.apply(this, arguments); };\n  }\n\n  // Add static properties to the constructor function, if supplied.\n  _.extend(child, parent, staticProps);\n\n  // Set the prototype chain to inherit from `parent`, without calling\n  // `parent`'s constructor function and add the prototype properties.\n  child.prototype = _.create(parent.prototype, protoProps);\n  child.prototype.constructor = child;\n\n  // Set a convenience property in case the parent's prototype is needed\n  // later.\n  child.__super__ = parent.prototype;\n\n  return child;\n};\n\n// Set up inheritance for the model, collection, router, view and history.\n// Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;\n\n// Throw an error when a URL is needed, and none is supplied.\n// export var urlError = function() {\n//   throw new Error('A \"url\" property or function must be specified');\n// };\n\n// Wrap an optional error callback with a fallback error event.\nexport var wrapError = function(model, options) {\n  var error = options.error;\n  options.error = function(resp) {\n    if (error) error.call(options.context, model, resp, options);\n    model.trigger('error', model, resp, options);\n  };\n};","import _ from 'underscore';\nimport {Events} from './events';\nimport {addUnderscoreMethods, extend as BackboneExtend, wrapError} from './utils';\n\n// Backbone.Model\n// --------------\n\n// Backbone **Models** are the basic data object in the framework --\n// frequently representing a row in a table in a database on your server.\n// A discrete chunk of data and a bunch of useful, related methods for\n// performing computations and transformations on that data.\n\n// Create a new model with the specified attributes. A client id (`cid`)\n// is automatically generated and assigned for you.\nexport var Model = function(attributes, options) {\n  var attrs = attributes || {};\n  options || (options = {});\n  this.preinitialize.apply(this, arguments);\n  this.cid = _.uniqueId(this.cidPrefix);\n  this.attributes = {};\n  if (options.collection) this.collection = options.collection;\n  if (options.parse) attrs = this.parse(attrs, options) || {};\n  var defaults = _.result(this, 'defaults');\n  attrs = _.defaults(_.extend({}, defaults, attrs), defaults);\n  this.set(attrs, options);\n  this.changed = {};\n  this.initialize.apply(this, arguments);\n};\n\nModel.extend = BackboneExtend;\n\n// Attach all inheritable methods to the Model prototype.\n_.extend(Model.prototype, Events, {\n\n  // A hash of attributes whose current and previous value differ.\n  changed: null,\n\n  // The value returned during the last failed validation.\n  validationError: null,\n\n  // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n  // CouchDB users may want to set this to `\"_id\"`.\n  idAttribute: 'id',\n\n  // The prefix is used to create the client id which is used to identify models locally.\n  // You may want to override this if you're experiencing name clashes with model ids.\n  cidPrefix: 'c',\n\n  // preinitialize is an empty function by default. You can override it with a function\n  // or object.  preinitialize will run before any instantiation logic is run in the Model.\n  preinitialize: function(){},\n\n  // Initialize is an empty function by default. Override it with your own\n  // initialization logic.\n  initialize: function(){},\n\n  // Return a copy of the model's `attributes` object.\n  toJSON: function(options) {\n    return _.clone(this.attributes);\n  },\n\n  // Proxy `Backbone.sync` by default -- but override this if you need\n  // custom syncing semantics for *this* particular model.\n  sync: function() {\n    return Backbone.sync.apply(this, arguments);\n  },\n\n  // Get the value of an attribute.\n  get: function(attr) {\n    return this.attributes[attr];\n  },\n\n  // Get the HTML-escaped value of an attribute.\n  escape: function(attr) {\n    return _.escape(this.get(attr));\n  },\n\n  // Returns `true` if the attribute contains a value that is not null\n  // or undefined.\n  has: function(attr) {\n    return this.get(attr) != null;\n  },\n\n  // Special-cased proxy to underscore's `_.matches` method.\n  matches: function(attrs) {\n    return !!_.iteratee(attrs, this)(this.attributes);\n  },\n\n  // Set a hash of model attributes on the object, firing `\"change\"`. This is\n  // the core primitive operation of a model, updating the data and notifying\n  // anyone who needs to know about the change in state. The heart of the beast.\n  set: function(key, val, options) {\n    if (key == null) return this;\n\n    // Handle both `\"key\", value` and `{key: value}` -style arguments.\n    var attrs;\n    if (typeof key === 'object') {\n      attrs = key;\n      options = val;\n    } else {\n      (attrs = {})[key] = val;\n    }\n\n    options || (options = {});\n\n    // Run validation.\n    if (!this._validate(attrs, options)) return false;\n\n    // Extract attributes and options.\n    var unset      = options.unset;\n    var silent     = options.silent;\n    var changes    = [];\n    var changing   = this._changing;\n    this._changing = true;\n\n    if (!changing) {\n      this._previousAttributes = _.clone(this.attributes);\n      this.changed = {};\n    }\n\n    var current = this.attributes;\n    var changed = this.changed;\n    var prev    = this._previousAttributes;\n\n    // For each `set` attribute, update or delete the current value.\n    for (var attr in attrs) {\n      val = attrs[attr];\n      if (!_.isEqual(current[attr], val)) changes.push(attr);\n      if (!_.isEqual(prev[attr], val)) {\n        changed[attr] = val;\n      } else {\n        delete changed[attr];\n      }\n      unset ? delete current[attr] : current[attr] = val;\n    }\n\n    // Update the `id`.\n    if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\n\n    // Trigger all relevant attribute changes.\n    if (!silent) {\n      if (changes.length) this._pending = options;\n      for (var i = 0; i < changes.length; i++) {\n        this.trigger('change:' + changes[i], this, current[changes[i]], options);\n      }\n    }\n\n    // You might be wondering why there's a `while` loop here. Changes can\n    // be recursively nested within `\"change\"` events.\n    if (changing) return this;\n    if (!silent) {\n      while (this._pending) {\n        options = this._pending;\n        this._pending = false;\n        this.trigger('change', this, options);\n      }\n    }\n    this._pending = false;\n    this._changing = false;\n    return this;\n  },\n\n  // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n  // if the attribute doesn't exist.\n  unset: function(attr, options) {\n    return this.set(attr, void 0, _.extend({}, options, {unset: true}));\n  },\n\n  // Clear all attributes on the model, firing `\"change\"`.\n  clear: function(options) {\n    var attrs = {};\n    for (var key in this.attributes) attrs[key] = void 0;\n    return this.set(attrs, _.extend({}, options, {unset: true}));\n  },\n\n  // Determine if the model has changed since the last `\"change\"` event.\n  // If you specify an attribute name, determine if that attribute has changed.\n  hasChanged: function(attr) {\n    if (attr == null) return !_.isEmpty(this.changed);\n    return _.has(this.changed, attr);\n  },\n\n  // Return an object containing all the attributes that have changed, or\n  // false if there are no changed attributes. Useful for determining what\n  // parts of a view need to be updated and/or what attributes need to be\n  // persisted to the server. Unset attributes will be set to undefined.\n  // You can also pass an attributes object to diff against the model,\n  // determining if there *would be* a change.\n  changedAttributes: function(diff) {\n    if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n    var old = this._changing ? this._previousAttributes : this.attributes;\n    var changed = {};\n    var hasChanged;\n    for (var attr in diff) {\n      var val = diff[attr];\n      if (_.isEqual(old[attr], val)) continue;\n      changed[attr] = val;\n      hasChanged = true;\n    }\n    return hasChanged ? changed : false;\n  },\n\n  // Get the previous value of an attribute, recorded at the time the last\n  // `\"change\"` event was fired.\n  previous: function(attr) {\n    if (attr == null || !this._previousAttributes) return null;\n    return this._previousAttributes[attr];\n  },\n\n  // Get all of the attributes of the model at the time of the previous\n  // `\"change\"` event.\n  previousAttributes: function() {\n    return _.clone(this._previousAttributes);\n  },\n\n  // Fetch the model from the server, merging the response with the model's\n  // local attributes. Any changed attributes will trigger a \"change\" event.\n  // fetch: function(options) {\n  //   throw new Error('not implemented');\n    // options = _.extend({parse: true}, options);\n    // var model = this;\n    // var success = options.success;\n    // options.success = function(resp) {\n    //   var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n    //   if (!model.set(serverAttrs, options)) return false;\n    //   if (success) success.call(options.context, model, resp, options);\n    //   model.trigger('sync', model, resp, options);\n    // };\n    // wrapError(this, options);\n    // return this.sync('read', this, options);\n  // },\n\n  // Set a hash of model attributes, and sync the model to the server.\n  // If the server returns an attributes hash that differs, the model's\n  // state will be `set` again.\n  // save: function(key, val, options) {\n    // throw new Error('not implemented');\n    // // Handle both `\"key\", value` and `{key: value}` -style arguments.\n    // var attrs;\n    // if (key == null || typeof key === 'object') {\n    //   attrs = key;\n    //   options = val;\n    // } else {\n    //   (attrs = {})[key] = val;\n    // }\n\n    // options = _.extend({validate: true, parse: true}, options);\n    // var wait = options.wait;\n\n    // // If we're not waiting and attributes exist, save acts as\n    // // `set(attr).save(null, opts)` with validation. Otherwise, check if\n    // // the model will be valid when the attributes, if any, are set.\n    // if (attrs && !wait) {\n    //   if (!this.set(attrs, options)) return false;\n    // } else if (!this._validate(attrs, options)) {\n    //   return false;\n    // }\n\n    // // After a successful server-side save, the client is (optionally)\n    // // updated with the server-side state.\n    // var model = this;\n    // var success = options.success;\n    // var attributes = this.attributes;\n    // options.success = function(resp) {\n    //   // Ensure attributes are restored during synchronous saves.\n    //   model.attributes = attributes;\n    //   var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n    //   if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);\n    //   if (serverAttrs && !model.set(serverAttrs, options)) return false;\n    //   if (success) success.call(options.context, model, resp, options);\n    //   model.trigger('sync', model, resp, options);\n    // };\n    // wrapError(this, options);\n\n    // // Set temporary attributes if `{wait: true}` to properly find new ids.\n    // if (attrs && wait) this.attributes = _.extend({}, attributes, attrs);\n\n    // var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\n    // if (method === 'patch' && !options.attrs) options.attrs = attrs;\n    // var xhr = this.sync(method, this, options);\n\n    // // Restore attributes.\n    // this.attributes = attributes;\n\n    // return xhr;\n  // },\n\n  // Destroy this model on the server if it was already persisted.\n  // Optimistically removes the model from its collection, if it has one.\n  // If `wait: true` is passed, waits for the server to respond before removal.\n  destroy: function(options) {\n    options = options ? _.clone(options) : {};\n    var model = this;\n    var success = options.success;\n    var wait = false;\n\n    var destroy = function() {\n      model.stopListening();\n      model.trigger('destroy', model, model.collection, options);\n    };\n\n    options.success = function(resp) {\n      if (wait) destroy();\n      if (success) success.call(options.context, model, resp, options);\n      if (!model.isNew()) model.trigger('sync', model, resp, options);\n    };\n\n    var xhr = false;\n    if (this.isNew()) {\n      _.defer(options.success);\n    } else {\n      wrapError(this, options);\n    //   xhr = this.sync('delete', this, options);\n    }\n    if (!wait) destroy();\n    return xhr;\n  },\n\n  // Default URL for the model's representation on the server -- if you're\n  // using Backbone's restful methods, override this to change the endpoint\n  // that will be called.\n  // url: function() {\n  //   var base =\n  //     _.result(this, 'urlRoot') ||\n  //     _.result(this.collection, 'url') ||\n  //     urlError();\n  //   if (this.isNew()) return base;\n  //   var id = this.get(this.idAttribute);\n  //   return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\n  // },\n\n  // **parse** converts a response into the hash of attributes to be `set` on\n  // the model. The default implementation is just to pass the response along.\n  parse: function(resp, options) {\n    return resp;\n  },\n\n  // Create a new model with identical attributes to this one.\n  clone: function() {\n    return new this.constructor(this.attributes);\n  },\n\n  // A model is new if it has never been saved to the server, and lacks an id.\n  isNew: function() {\n    return !this.has(this.idAttribute);\n  },\n\n  // Check if the model is currently in a valid state.\n  isValid: function(options) {\n    return this._validate({}, _.extend({}, options, {validate: true}));\n  },\n\n  // Run validation against the next complete set of model attributes,\n  // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n  _validate: function(attrs, options) {\n    if (!options.validate || !this.validate) return true;\n    attrs = _.extend({}, this.attributes, attrs);\n    var error = this.validationError = this.validate(attrs, options) || null;\n    if (!error) return true;\n    this.trigger('invalid', this, error, _.extend(options, {validationError: error}));\n    return false;\n  }\n\n});\n\n// Underscore methods that we want to implement on the Model, mapped to the\n// number of arguments they take.\nvar modelMethods = {keys: 1, values: 1, pairs: 1, invert: 1, pick: 0,\n    omit: 0, chain: 1, isEmpty: 1};\n\n// Mix in each Underscore method as a proxy to `Model#attributes`.\naddUnderscoreMethods(Model, modelMethods, 'attributes');","import _ from 'underscore';\nimport {Events} from './events';\nimport {Model} from './model';\nimport {addUnderscoreMethods, extend as BackboneExtend} from './utils';\n\n// Create a local reference to a common array method we'll want to use later.\nconst slice = Array.prototype.slice;\n\n// Backbone.Collection\n// -------------------\n\n// If models tend to represent a single row of data, a Backbone Collection is\n// more analogous to a table full of data ... or a small slice or page of that\n// table, or a collection of rows that belong together for a particular reason\n// -- all of the messages in this particular folder, all of the documents\n// belonging to this particular author, and so on. Collections maintain\n// indexes of their models, both in order, and for lookup by `id`.\n\n// Create a new **Collection**, perhaps to contain a specific type of `model`.\n// If a `comparator` is specified, the Collection will maintain\n// its models in sort order, as they're added and removed.\nexport var Collection = function(models, options) {\n  options || (options = {});\n  this.preinitialize.apply(this, arguments);\n  if (options.model) this.model = options.model;\n  if (options.comparator !== void 0) this.comparator = options.comparator;\n  this._reset();\n  this.initialize.apply(this, arguments);\n  if (models) this.reset(models, _.extend({silent: true}, options));\n};\n\nCollection.extend = BackboneExtend;\n\n// Default options for `Collection#set`.\nvar setOptions = {add: true, remove: true, merge: true};\nvar addOptions = {add: true, remove: false};\n\n// Splices `insert` into `array` at index `at`.\nvar splice = function(array, insert, at) {\n  at = Math.min(Math.max(at, 0), array.length);\n  var tail = Array(array.length - at);\n  var length = insert.length;\n  var i;\n  for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\n  for (i = 0; i < length; i++) array[i + at] = insert[i];\n  for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\n};\n\n// Define the Collection's inheritable methods.\n_.extend(Collection.prototype, Events, {\n\n  // The default model for a collection is just a **Backbone.Model**.\n  // This should be overridden in most cases.\n  model: Model,\n\n\n  // preinitialize is an empty function by default. You can override it with a function\n  // or object.  preinitialize will run before any instantiation logic is run in the Collection.\n  preinitialize: function(){},\n\n  // Initialize is an empty function by default. Override it with your own\n  // initialization logic.\n  initialize: function(){},\n\n  // The JSON representation of a Collection is an array of the\n  // models' attributes.\n  toJSON: function(options) {\n    return this.map(function(model) { return model.toJSON(options); });\n  },\n\n  // // Proxy `Backbone.sync` by default.\n  // sync: function() {\n  //   return Backbone.sync.apply(this, arguments);\n  // },\n\n  // Add a model, or list of models to the set. `models` may be Backbone\n  // Models or raw JavaScript objects to be converted to Models, or any\n  // combination of the two.\n  add: function(models, options) {\n    return this.set(models, _.extend({merge: false}, options, addOptions));\n  },\n\n  // Remove a model, or a list of models from the set.\n  remove: function(models, options) {\n    options = _.extend({}, options);\n    var singular = !_.isArray(models);\n    models = singular ? [models] : models.slice();\n    var removed = this._removeModels(models, options);\n    if (!options.silent && removed.length) {\n      options.changes = {added: [], merged: [], removed: removed};\n      this.trigger('update', this, options);\n    }\n    return singular ? removed[0] : removed;\n  },\n\n  // Update a collection by `set`-ing a new list of models, adding new ones,\n  // removing models that are no longer present, and merging models that\n  // already exist in the collection, as necessary. Similar to **Model#set**,\n  // the core operation for updating the data contained by the collection.\n  set: function(models, options) {\n    if (models == null) return;\n\n    options = _.extend({}, setOptions, options);\n    if (options.parse && !this._isModel(models)) {\n      models = this.parse(models, options) || [];\n    }\n\n    var singular = !_.isArray(models);\n    models = singular ? [models] : models.slice();\n\n    var at = options.at;\n    if (at != null) at = +at;\n    if (at > this.length) at = this.length;\n    if (at < 0) at += this.length + 1;\n\n    var set = [];\n    var toAdd = [];\n    var toMerge = [];\n    var toRemove = [];\n    var modelMap = {};\n\n    var add = options.add;\n    var merge = options.merge;\n    var remove = options.remove;\n\n    var sort = false;\n    var sortable = this.comparator && at == null && options.sort !== false;\n    var sortAttr = _.isString(this.comparator) ? this.comparator : null;\n\n    // Turn bare objects into model references, and prevent invalid models\n    // from being added.\n    var model, i;\n    for (i = 0; i < models.length; i++) {\n      model = models[i];\n\n      // If a duplicate is found, prevent it from being added and\n      // optionally merge it into the existing model.\n      var existing = this.get(model);\n      if (existing) {\n        if (merge && model !== existing) {\n          var attrs = this._isModel(model) ? model.attributes : model;\n          if (options.parse) attrs = existing.parse(attrs, options);\n          existing.set(attrs, options);\n          toMerge.push(existing);\n          if (sortable && !sort) sort = existing.hasChanged(sortAttr);\n        }\n        if (!modelMap[existing.cid]) {\n          modelMap[existing.cid] = true;\n          set.push(existing);\n        }\n        models[i] = existing;\n\n      // If this is a new, valid model, push it to the `toAdd` list.\n      } else if (add) {\n        model = models[i] = this._prepareModel(model, options);\n        if (model) {\n          toAdd.push(model);\n          this._addReference(model, options);\n          modelMap[model.cid] = true;\n          set.push(model);\n        }\n      }\n    }\n\n    // Remove stale models.\n    if (remove) {\n      for (i = 0; i < this.length; i++) {\n        model = this.models[i];\n        if (!modelMap[model.cid]) toRemove.push(model);\n      }\n      if (toRemove.length) this._removeModels(toRemove, options);\n    }\n\n    // See if sorting is needed, update `length` and splice in new models.\n    var orderChanged = false;\n    var replace = !sortable && add && remove;\n    if (set.length && replace) {\n      orderChanged = this.length !== set.length || _.some(this.models, function(m, index) {\n        return m !== set[index];\n      });\n      this.models.length = 0;\n      splice(this.models, set, 0);\n      this.length = this.models.length;\n    } else if (toAdd.length) {\n      if (sortable) sort = true;\n      splice(this.models, toAdd, at == null ? this.length : at);\n      this.length = this.models.length;\n    }\n\n    // Silently sort the collection if appropriate.\n    if (sort) this.sort({silent: true});\n\n    // Unless silenced, it's time to fire all appropriate add/sort/update events.\n    if (!options.silent) {\n      for (i = 0; i < toAdd.length; i++) {\n        if (at != null) options.index = at + i;\n        model = toAdd[i];\n        model.trigger('add', model, this, options);\n      }\n      if (sort || orderChanged) this.trigger('sort', this, options);\n      if (toAdd.length || toRemove.length || toMerge.length) {\n        options.changes = {\n          added: toAdd,\n          removed: toRemove,\n          merged: toMerge\n        };\n        this.trigger('update', this, options);\n      }\n    }\n\n    // Return the added (or merged) model (or models).\n    return singular ? models[0] : models;\n  },\n\n  // When you have more items than you want to add or remove individually,\n  // you can reset the entire set with a new list of models, without firing\n  // any granular `add` or `remove` events. Fires `reset` when finished.\n  // Useful for bulk operations and optimizations.\n  reset: function(models, options) {\n    options = options ? _.clone(options) : {};\n    for (var i = 0; i < this.models.length; i++) {\n      this._removeReference(this.models[i], options);\n    }\n    options.previousModels = this.models;\n    this._reset();\n    models = this.add(models, _.extend({silent: true}, options));\n    if (!options.silent) this.trigger('reset', this, options);\n    return models;\n  },\n\n  // Add a model to the end of the collection.\n  push: function(model, options) {\n    return this.add(model, _.extend({at: this.length}, options));\n  },\n\n  // Remove a model from the end of the collection.\n  pop: function(options) {\n    var model = this.at(this.length - 1);\n    return this.remove(model, options);\n  },\n\n  // Add a model to the beginning of the collection.\n  unshift: function(model, options) {\n    return this.add(model, _.extend({at: 0}, options));\n  },\n\n  // Remove a model from the beginning of the collection.\n  shift: function(options) {\n    var model = this.at(0);\n    return this.remove(model, options);\n  },\n\n  // Slice out a sub-array of models from the collection.\n  slice: function() {\n    return slice.apply(this.models, arguments);\n  },\n\n  // Get a model from the set by id, cid, model object with id or cid\n  // properties, or an attributes object that is transformed through modelId.\n  get: function(obj) {\n    if (obj == null) return void 0;\n    return this._byId[obj] ||\n      this._byId[this.modelId(obj.attributes || obj)] ||\n      obj.cid && this._byId[obj.cid];\n  },\n\n  // Returns `true` if the model is in the collection.\n  has: function(obj) {\n    return this.get(obj) != null;\n  },\n\n  // Get the model at the given index.\n  at: function(index) {\n    if (index < 0) index += this.length;\n    return this.models[index];\n  },\n\n  // Return models with matching attributes. Useful for simple cases of\n  // `filter`.\n  where: function(attrs, first) {\n    return this[first ? 'find' : 'filter'](attrs);\n  },\n\n  // Return the first model with matching attributes. Useful for simple cases\n  // of `find`.\n  findWhere: function(attrs) {\n    return this.where(attrs, true);\n  },\n\n  // Force the collection to re-sort itself. You don't need to call this under\n  // normal circumstances, as the set will maintain sort order as each item\n  // is added.\n  sort: function(options) {\n    var comparator = this.comparator;\n    if (!comparator) throw new Error('Cannot sort a set without a comparator');\n    options || (options = {});\n\n    var length = comparator.length;\n    if (_.isFunction(comparator)) comparator = _.bind(comparator, this);\n\n    // Run sort based on type of `comparator`.\n    if (length === 1 || _.isString(comparator)) {\n      this.models = this.sortBy(comparator);\n    } else {\n      this.models.sort(comparator);\n    }\n    if (!options.silent) this.trigger('sort', this, options);\n    return this;\n  },\n\n  // Pluck an attribute from each model in the collection.\n  pluck: function(attr) {\n    return this.map(attr + '');\n  },\n\n  // Fetch the default set of models for this collection, resetting the\n  // collection when they arrive. If `reset: true` is passed, the response\n  // data will be passed through the `reset` method instead of `set`.\n  // fetch: function(options) {\n  //   options = _.extend({parse: true}, options);\n  //   var success = options.success;\n  //   var collection = this;\n  //   options.success = function(resp) {\n  //     var method = options.reset ? 'reset' : 'set';\n  //     collection[method](resp, options);\n  //     if (success) success.call(options.context, collection, resp, options);\n  //     collection.trigger('sync', collection, resp, options);\n  //   };\n  //   wrapError(this, options);\n  //   return this.sync('read', this, options);\n  // },\n\n  // Create a new instance of a model in this collection. Add the model to the\n  // collection immediately, unless `wait: true` is passed, in which case we\n  // wait for the server to agree.\n  create: function(model, options) {\n    options = options ? _.clone(options) : {};\n    var wait = false; //options.wait;\n    model = this._prepareModel(model, options);\n    if (!model) return false;\n    if (!wait) this.add(model, options);\n    var collection = this;\n    var success = options.success;\n    // options.success = function(m, resp, callbackOpts) {\n      // if (wait) collection.add(m, callbackOpts);\n      if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\n    // };\n    // model.save(null, options);\n    return model;\n  },\n\n  // **parse** converts a response into a list of models to be added to the\n  // collection. The default implementation is just to pass it through.\n  parse: function(resp, options) {\n    return resp;\n  },\n\n  // Create a new collection with an identical list of models as this one.\n  clone: function() {\n    return new this.constructor(this.models, {\n      model: this.model,\n      comparator: this.comparator\n    });\n  },\n\n  // Define how to uniquely identify models in the collection.\n  modelId: function(attrs) {\n    return attrs[this.model.prototype.idAttribute || 'id'];\n  },\n\n  // Get an iterator of all models in this collection.\n  values: function() {\n    return new CollectionIterator(this, ITERATOR_VALUES);\n  },\n\n  // Get an iterator of all model IDs in this collection.\n  keys: function() {\n    return new CollectionIterator(this, ITERATOR_KEYS);\n  },\n\n  // Get an iterator of all [ID, model] tuples in this collection.\n  entries: function() {\n    return new CollectionIterator(this, ITERATOR_KEYSVALUES);\n  },\n\n  // Private method to reset all internal state. Called when the collection\n  // is first initialized or reset.\n  _reset: function() {\n    this.length = 0;\n    this.models = [];\n    this._byId  = {};\n  },\n\n  // Prepare a hash of attributes (or other model) to be added to this\n  // collection.\n  _prepareModel: function(attrs, options) {\n    if (this._isModel(attrs)) {\n      if (!attrs.collection) attrs.collection = this;\n      return attrs;\n    }\n    options = options ? _.clone(options) : {};\n    options.collection = this;\n    var model = new this.model(attrs, options);\n    if (!model.validationError) return model;\n    this.trigger('invalid', this, model.validationError, options);\n    return false;\n  },\n\n  // Internal method called by both remove and set.\n  _removeModels: function(models, options) {\n    var removed = [];\n    for (var i = 0; i < models.length; i++) {\n      var model = this.get(models[i]);\n      if (!model) continue;\n\n      var index = this.indexOf(model);\n      this.models.splice(index, 1);\n      this.length--;\n\n      // Remove references before triggering 'remove' event to prevent an\n      // infinite loop. #3693\n      delete this._byId[model.cid];\n      var id = this.modelId(model.attributes);\n      if (id != null) delete this._byId[id];\n\n      if (!options.silent) {\n        options.index = index;\n        model.trigger('remove', model, this, options);\n      }\n\n      removed.push(model);\n      this._removeReference(model, options);\n    }\n    return removed;\n  },\n\n  // Method for checking whether an object should be considered a model for\n  // the purposes of adding to the collection.\n  _isModel: function(model) {\n    return model instanceof Model;\n  },\n\n  // Internal method to create a model's ties to a collection.\n  _addReference: function(model, options) {\n    this._byId[model.cid] = model;\n    var id = this.modelId(model.attributes);\n    if (id != null) this._byId[id] = model;\n    model.on('all', this._onModelEvent, this);\n  },\n\n  // Internal method to sever a model's ties to a collection.\n  _removeReference: function(model, options) {\n    delete this._byId[model.cid];\n    var id = this.modelId(model.attributes);\n    if (id != null) delete this._byId[id];\n    if (this === model.collection) delete model.collection;\n    model.off('all', this._onModelEvent, this);\n  },\n\n  // Internal method called every time a model in the set fires an event.\n  // Sets need to update their indexes when models change ids. All other\n  // events simply proxy through. \"add\" and \"remove\" events that originate\n  // in other collections are ignored.\n  _onModelEvent: function(event, model, collection, options) {\n    if (model) {\n      if ((event === 'add' || event === 'remove') && collection !== this) return;\n      if (event === 'destroy') this.remove(model, options);\n      if (event === 'change') {\n        var prevId = this.modelId(model.previousAttributes());\n        var id = this.modelId(model.attributes);\n        if (prevId !== id) {\n          if (prevId != null) delete this._byId[prevId];\n          if (id != null) this._byId[id] = model;\n        }\n      }\n    }\n    this.trigger.apply(this, arguments);\n  }\n\n});\n\n// Defining an @@iterator method implements JavaScript's Iterable protocol.\n// In modern ES2015 browsers, this value is found at Symbol.iterator.\n/* global Symbol */\nvar $$iterator = typeof Symbol === 'function' && Symbol.iterator;\nif ($$iterator) {\n  Collection.prototype[$$iterator] = Collection.prototype.values;\n}\n\n// CollectionIterator\n// ------------------\n\n// A CollectionIterator implements JavaScript's Iterator protocol, allowing the\n// use of `for of` loops in modern browsers and interoperation between\n// Backbone.Collection and other JavaScript functions and third-party libraries\n// which can operate on Iterables.\nvar CollectionIterator = function(collection, kind) {\n  this._collection = collection;\n  this._kind = kind;\n  this._index = 0;\n};\n\n// This \"enum\" defines the three possible kinds of values which can be emitted\n// by a CollectionIterator that correspond to the values(), keys() and entries()\n// methods on Collection, respectively.\nvar ITERATOR_VALUES = 1;\nvar ITERATOR_KEYS = 2;\nvar ITERATOR_KEYSVALUES = 3;\n\n// All Iterators should themselves be Iterable.\nif ($$iterator) {\n  CollectionIterator.prototype[$$iterator] = function() {\n    return this;\n  };\n}\n\nCollectionIterator.prototype.next = function() {\n  if (this._collection) {\n\n    // Only continue iterating if the iterated collection is long enough.\n    if (this._index < this._collection.length) {\n      var model = this._collection.at(this._index);\n      this._index++;\n\n      // Construct a value depending on what kind of values should be iterated.\n      var value;\n      if (this._kind === ITERATOR_VALUES) {\n        value = model;\n      } else {\n        var id = this._collection.modelId(model.attributes);\n        if (this._kind === ITERATOR_KEYS) {\n          value = id;\n        } else { // ITERATOR_KEYSVALUES\n          value = [id, model];\n        }\n      }\n      return {value: value, done: false};\n    }\n\n    // Once exhausted, remove the reference to the collection so future\n    // calls to the next method always return done.\n    this._collection = void 0;\n  }\n\n  return {value: void 0, done: true};\n};\n\n// Underscore methods that we want to implement on the Collection.\n// 90% of the core usefulness of Backbone Collections is actually implemented\n// right here:\nvar collectionMethods = {forEach: 3, each: 3, map: 3, collect: 3, reduce: 0,\n    foldl: 0, inject: 0, reduceRight: 0, foldr: 0, find: 3, detect: 3, filter: 3,\n    select: 3, reject: 3, every: 3, all: 3, some: 3, any: 3, include: 3, includes: 3,\n    contains: 3, invoke: 0, max: 3, min: 3, toArray: 1, size: 1, first: 3,\n    head: 3, take: 3, initial: 3, rest: 3, tail: 3, drop: 3, last: 3,\n    without: 0, difference: 0, indexOf: 3, shuffle: 1, lastIndexOf: 3,\n    isEmpty: 1, chain: 1, sample: 3, partition: 3, groupBy: 3, countBy: 3,\n    sortBy: 3, indexBy: 3, findIndex: 3, findLastIndex: 3};\n\n// Mix in each Underscore method as a proxy to `Collection#models`.\naddUnderscoreMethods(Collection, collectionMethods, 'models');\n\nexport default Collection;","export {Model} from './model';\nexport {Collection} from './collection';\nexport {Events} from './events';\n\n// export const Model = model;\n// export const Collection = collection; \n// export const Events = events;"],"names":["slice","defaults","BackboneExtend"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;;;;;AAcA,AAAO,IAAM,SAAS,EAAf;;;AAGP,IAAI,gBAAgB,KAApB;;;;;AAKA,IAAI,YAAY,SAAZ,SAAY,CAAS,QAAT,EAAmB,MAAnB,EAA2B,IAA3B,EAAiC,QAAjC,EAA2C,IAA3C,EAAiD;MAC3D,IAAI,CAAR;MAAW,KAAX;MACI,QAAQ,QAAO,IAAP,yCAAO,IAAP,OAAgB,QAA5B,EAAsC;;QAEhC,aAAa,KAAK,CAAlB,IAAuB,aAAa,IAApC,IAA4C,KAAK,OAAL,KAAiB,KAAK,CAAtE,EAAyE,KAAK,OAAL,GAAe,QAAf;SACpE,QAAQ,EAAE,IAAF,CAAO,IAAP,CAAb,EAA2B,IAAI,MAAM,MAArC,EAA8C,GAA9C,EAAmD;eACxC,UAAU,QAAV,EAAoB,MAApB,EAA4B,MAAM,CAAN,CAA5B,EAAsC,KAAK,MAAM,CAAN,CAAL,CAAtC,EAAsD,IAAtD,CAAT;;GAJJ,MAMO,IAAI,QAAQ,cAAc,IAAd,CAAmB,IAAnB,CAAZ,EAAsC;;SAEtC,QAAQ,KAAK,KAAL,CAAW,aAAX,CAAb,EAAwC,IAAI,MAAM,MAAlD,EAA0D,GAA1D,EAA+D;eACpD,SAAS,MAAT,EAAiB,MAAM,CAAN,CAAjB,EAA2B,QAA3B,EAAqC,IAArC,CAAT;;GAHG,MAKA;;aAEI,SAAS,MAAT,EAAiB,IAAjB,EAAuB,QAAvB,EAAiC,IAAjC,CAAT;;SAEK,MAAP;CAjBF;;;;AAsBA,OAAO,EAAP,GAAY,UAAS,IAAT,EAAe,QAAf,EAAyB,OAAzB,EAAkC;SACrC,WAAW,IAAX,EAAiB,IAAjB,EAAuB,QAAvB,EAAiC,OAAjC,CAAP;CADF;;;AAKA,IAAI,aAAa,SAAb,UAAa,CAAS,GAAT,EAAc,IAAd,EAAoB,QAApB,EAA8B,OAA9B,EAAuC,SAAvC,EAAkD;MAC7D,OAAJ,GAAc,UAAU,KAAV,EAAiB,IAAI,OAAJ,IAAe,EAAhC,EAAoC,IAApC,EAA0C,QAA1C,EAAoD;aACvD,OADuD;SAE3D,GAF2D;eAGrD;GAHC,CAAd;;MAMI,SAAJ,EAAe;QACT,YAAY,IAAI,UAAJ,KAAmB,IAAI,UAAJ,GAAiB,EAApC,CAAhB;cACU,UAAU,EAApB,IAA0B,SAA1B;;;SAGK,GAAP;CAZF;;;;;AAkBA,OAAO,QAAP,GAAkB,UAAS,GAAT,EAAc,IAAd,EAAoB,QAApB,EAA8B;MAC1C,CAAC,GAAL,EAAU,OAAO,IAAP;MACN,KAAK,IAAI,SAAJ,KAAkB,IAAI,SAAJ,GAAgB,EAAE,QAAF,CAAW,GAAX,CAAlC,CAAT;MACI,cAAc,KAAK,YAAL,KAAsB,KAAK,YAAL,GAAoB,EAA1C,CAAlB;MACI,YAAY,YAAY,EAAZ,CAAhB;;;;MAII,CAAC,SAAL,EAAgB;QACV,SAAS,KAAK,SAAL,KAAmB,KAAK,SAAL,GAAiB,EAAE,QAAF,CAAW,GAAX,CAApC,CAAb;gBACY,YAAY,EAAZ,IAAkB,EAAC,KAAK,GAAN,EAAW,OAAO,EAAlB,EAAsB,IAAI,MAA1B,EAAkC,aAAa,WAA/C,EAA4D,OAAO,CAAnE,EAA9B;;;;aAIS,GAAX,EAAgB,IAAhB,EAAsB,QAAtB,EAAgC,IAAhC,EAAsC,SAAtC;SACO,IAAP;CAfF;;;AAmBA,IAAI,QAAQ,SAAR,KAAQ,CAAS,MAAT,EAAiB,IAAjB,EAAuB,QAAvB,EAAiC,OAAjC,EAA0C;MAChD,QAAJ,EAAc;QACR,WAAW,OAAO,IAAP,MAAiB,OAAO,IAAP,IAAe,EAAhC,CAAf;QACI,UAAU,QAAQ,OAAtB;QAA+B,MAAM,QAAQ,GAA7C;QAAkD,YAAY,QAAQ,SAAtE;QACI,SAAJ,EAAe,UAAU,KAAV;;aAEN,IAAT,CAAc,EAAC,UAAU,QAAX,EAAqB,SAAS,OAA9B,EAAuC,KAAK,WAAW,GAAvD,EAA4D,WAAW,SAAvE,EAAd;;SAEK,MAAP;CARF;;;;;;AAeA,OAAO,GAAP,GAAa,UAAS,IAAT,EAAe,QAAf,EAAyB,OAAzB,EAAkC;MACzC,CAAC,KAAK,OAAV,EAAmB,OAAO,IAAP;OACd,OAAL,GAAe,UAAU,MAAV,EAAkB,KAAK,OAAvB,EAAgC,IAAhC,EAAsC,QAAtC,EAAgD;aACpD,OADoD;eAElD,KAAK;GAFH,CAAf;SAIO,IAAP;CANF;;;;AAWA,OAAO,aAAP,GAAuB,UAAS,GAAT,EAAc,IAAd,EAAoB,QAApB,EAA8B;MAC/C,cAAc,KAAK,YAAvB;MACI,CAAC,WAAL,EAAkB,OAAO,IAAP;;MAEd,MAAM,MAAM,CAAC,IAAI,SAAL,CAAN,GAAwB,EAAE,IAAF,CAAO,WAAP,CAAlC;;OAEK,IAAI,IAAI,CAAb,EAAgB,IAAI,IAAI,MAAxB,EAAgC,GAAhC,EAAqC;QAC/B,YAAY,YAAY,IAAI,CAAJ,CAAZ,CAAhB;;;;QAII,CAAC,SAAL,EAAgB;;cAEN,GAAV,CAAc,GAAd,CAAkB,IAAlB,EAAwB,QAAxB,EAAkC,IAAlC;;;SAGK,IAAP;CAhBF;;;AAoBA,IAAI,SAAS,SAAT,MAAS,CAAS,MAAT,EAAiB,IAAjB,EAAuB,QAAvB,EAAiC,OAAjC,EAA0C;MACjD,CAAC,MAAL,EAAa;;MAET,IAAI,CAAR;MAAW,SAAX;MACI,UAAU,QAAQ,OAAtB;MAA+B,YAAY,QAAQ,SAAnD;;;MAGI,CAAC,IAAD,IAAS,CAAC,QAAV,IAAsB,CAAC,OAA3B,EAAoC;QAC9B,MAAM,EAAE,IAAF,CAAO,SAAP,CAAV;WACO,IAAI,IAAI,MAAf,EAAuB,GAAvB,EAA4B;kBACd,UAAU,IAAI,CAAJ,CAAV,CAAZ;aACO,UAAU,UAAU,EAApB,CAAP;aACO,UAAU,WAAV,CAAsB,UAAU,KAAhC,CAAP;;;;;MAKA,QAAQ,OAAO,CAAC,IAAD,CAAP,GAAgB,EAAE,IAAF,CAAO,MAAP,CAA5B;SACO,IAAI,MAAM,MAAjB,EAAyB,GAAzB,EAA8B;WACrB,MAAM,CAAN,CAAP;QACI,WAAW,OAAO,IAAP,CAAf;;;QAGI,CAAC,QAAL,EAAe;;;QAGX,YAAY,EAAhB;SACK,IAAI,IAAI,CAAb,EAAgB,IAAI,SAAS,MAA7B,EAAqC,GAArC,EAA0C;UACpC,UAAU,SAAS,CAAT,CAAd;UAEE,YAAY,aAAa,QAAQ,QAAjC,IACE,aAAa,QAAQ,QAAR,CAAiB,SADhC,IAEI,WAAW,YAAY,QAAQ,OAHrC,EAIE;kBACU,IAAV,CAAe,OAAf;OALF,MAMO;oBACO,QAAQ,SAApB;YACI,aAAa,EAAE,UAAU,KAAZ,KAAsB,CAAvC,EAA0C;iBACjC,UAAU,UAAU,EAApB,CAAP;iBACO,UAAU,WAAV,CAAsB,UAAU,KAAhC,CAAP;;;;;;QAMF,UAAU,MAAd,EAAsB;aACb,IAAP,IAAe,SAAf;KADF,MAEO;aACE,OAAO,IAAP,CAAP;;;SAGG,MAAP;CAnDF;;;;;;AA0DA,OAAO,IAAP,GAAc,UAAS,IAAT,EAAe,QAAf,EAAyB,OAAzB,EAAkC;;MAE1C,SAAS,UAAU,OAAV,EAAmB,EAAnB,EAAuB,IAAvB,EAA6B,QAA7B,EAAuC,EAAE,IAAF,CAAO,KAAK,GAAZ,EAAiB,IAAjB,CAAvC,CAAb;MACI,OAAO,IAAP,KAAgB,QAAhB,IAA4B,WAAW,IAA3C,EAAiD,WAAW,KAAK,CAAhB;SAC1C,KAAK,EAAL,CAAQ,MAAR,EAAgB,QAAhB,EAA0B,OAA1B,CAAP;CAJF;;;AAQA,OAAO,YAAP,GAAsB,UAAS,GAAT,EAAc,IAAd,EAAoB,QAApB,EAA8B;;MAE9C,SAAS,UAAU,OAAV,EAAmB,EAAnB,EAAuB,IAAvB,EAA6B,QAA7B,EAAuC,EAAE,IAAF,CAAO,KAAK,aAAZ,EAA2B,IAA3B,EAAiC,GAAjC,CAAvC,CAAb;SACO,KAAK,QAAL,CAAc,GAAd,EAAmB,MAAnB,CAAP;CAHF;;;;AAQA,IAAI,UAAU,SAAV,OAAU,CAAS,GAAT,EAAc,IAAd,EAAoB,QAApB,EAA8B,KAA9B,EAAqC;MAC7C,QAAJ,EAAc;QACR,OAAO,IAAI,IAAJ,IAAY,EAAE,IAAF,CAAO,YAAW;YACjC,IAAN,EAAY,IAAZ;eACS,KAAT,CAAe,IAAf,EAAqB,SAArB;KAFqB,CAAvB;SAIK,SAAL,GAAiB,QAAjB;;SAEK,GAAP;CARF;;;;;;AAeA,OAAO,OAAP,GAAiB,UAAS,IAAT,EAAe;MAC1B,CAAC,KAAK,OAAV,EAAmB,OAAO,IAAP;;MAEf,SAAS,KAAK,GAAL,CAAS,CAAT,EAAY,UAAU,MAAV,GAAmB,CAA/B,CAAb;MACI,OAAO,MAAM,MAAN,CAAX;OACK,IAAI,IAAI,CAAb,EAAgB,IAAI,MAApB,EAA4B,GAA5B;SAAsC,CAAL,IAAU,UAAU,IAAI,CAAd,CAAV;GAEjC,UAAU,UAAV,EAAsB,KAAK,OAA3B,EAAoC,IAApC,EAA0C,KAAK,CAA/C,EAAkD,IAAlD;SACO,IAAP;CARF;;;AAYA,IAAI,aAAa,SAAb,UAAa,CAAS,SAAT,EAAoB,IAApB,EAA0B,QAA1B,EAAoC,IAApC,EAA0C;MACrD,SAAJ,EAAe;QACT,SAAS,UAAU,IAAV,CAAb;QACI,YAAY,UAAU,GAA1B;QACI,UAAU,SAAd,EAAyB,YAAY,UAAU,KAAV,EAAZ;QACrB,MAAJ,EAAY,cAAc,MAAd,EAAsB,IAAtB;QACR,SAAJ,EAAe,cAAc,SAAd,EAAyB,CAAC,IAAD,EAAO,MAAP,CAAc,IAAd,CAAzB;;SAEV,SAAP;CARF;;;;;AAcA,IAAI,gBAAgB,SAAhB,aAAgB,CAAS,MAAT,EAAiB,IAAjB,EAAuB;MACrC,EAAJ;MAAQ,IAAI,CAAC,CAAb;MAAgB,IAAI,OAAO,MAA3B;MAAmC,KAAK,KAAK,CAAL,CAAxC;MAAiD,KAAK,KAAK,CAAL,CAAtD;MAA+D,KAAK,KAAK,CAAL,CAApE;UACQ,KAAK,MAAb;SACO,CAAL;aAAe,EAAE,CAAF,GAAM,CAAb;SAAiB,KAAK,OAAO,CAAP,CAAN,EAAiB,QAAjB,CAA0B,IAA1B,CAA+B,GAAG,GAAlC;OAAwC;SAC3D,CAAL;aAAe,EAAE,CAAF,GAAM,CAAb;SAAiB,KAAK,OAAO,CAAP,CAAN,EAAiB,QAAjB,CAA0B,IAA1B,CAA+B,GAAG,GAAlC,EAAuC,EAAvC;OAA4C;SAC/D,CAAL;aAAe,EAAE,CAAF,GAAM,CAAb;SAAiB,KAAK,OAAO,CAAP,CAAN,EAAiB,QAAjB,CAA0B,IAA1B,CAA+B,GAAG,GAAlC,EAAuC,EAAvC,EAA2C,EAA3C;OAAgD;SACnE,CAAL;aAAe,EAAE,CAAF,GAAM,CAAb;SAAiB,KAAK,OAAO,CAAP,CAAN,EAAiB,QAAjB,CAA0B,IAA1B,CAA+B,GAAG,GAAlC,EAAuC,EAAvC,EAA2C,EAA3C,EAA+C,EAA/C;OAAoD;;aAC5D,EAAE,CAAF,GAAM,CAAb;SAAiB,KAAK,OAAO,CAAP,CAAN,EAAiB,QAAjB,CAA0B,KAA1B,CAAgC,GAAG,GAAnC,EAAwC,IAAxC;OAA+C;;CAP5E;;;AAYA,OAAO,IAAP,GAAgB,OAAO,EAAvB;AACA,OAAO,MAAP,GAAgB,OAAO,GAAvB;;;;8BAKA;;ACzQA;AACA,IAAMA,UAAQ,MAAM,SAAN,CAAgB,KAA9B;;;;;;;;;AASA,IAAI,YAAY,SAAZ,SAAY,CAAS,MAAT,EAAiB,MAAjB,EAAyB,SAAzB,EAAoC;UAC1C,MAAR;SACO,CAAL;aAAe,YAAW;eACjB,EAAE,MAAF,EAAU,KAAK,SAAL,CAAV,CAAP;OADM;SAGH,CAAL;aAAe,UAAS,KAAT,EAAgB;eACtB,EAAE,MAAF,EAAU,KAAK,SAAL,CAAV,EAA2B,KAA3B,CAAP;OADM;SAGH,CAAL;aAAe,UAAS,QAAT,EAAmB,OAAnB,EAA4B;eAClC,EAAE,MAAF,EAAU,KAAK,SAAL,CAAV,EAA2B,GAAG,QAAH,EAAa,IAAb,CAA3B,EAA+C,OAA/C,CAAP;OADM;SAGH,CAAL;aAAe,UAAS,QAAT,EAAmB,UAAnB,EAA+B,OAA/B,EAAwC;eAC9C,EAAE,MAAF,EAAU,KAAK,SAAL,CAAV,EAA2B,GAAG,QAAH,EAAa,IAAb,CAA3B,EAA+C,UAA/C,EAA2D,OAA3D,CAAP;OADM;;aAGQ,YAAW;YACrB,OAAOA,QAAM,IAAN,CAAW,SAAX,CAAX;aACK,OAAL,CAAa,KAAK,SAAL,CAAb;eACO,EAAE,MAAF,EAAU,KAAV,CAAgB,CAAhB,EAAmB,IAAnB,CAAP;OAHO;;CAdb;;AAsBA,AAAO,IAAI,uBAAuB,SAAvB,oBAAuB,CAAS,KAAT,EAAgB,OAAhB,EAAyB,SAAzB,EAAoC;IAClE,IAAF,CAAO,OAAP,EAAgB,UAAS,MAAT,EAAiB,MAAjB,EAAyB;QACnC,EAAE,MAAF,CAAJ,EAAe,MAAM,SAAN,CAAgB,MAAhB,IAA0B,UAAU,MAAV,EAAkB,MAAlB,EAA0B,SAA1B,CAA1B;GADjB;CADK;;;AAOP,IAAI,KAAK,SAAL,EAAK,CAAS,QAAT,EAAmB,QAAnB,EAA6B;MAChC,EAAE,UAAF,CAAa,QAAb,CAAJ,EAA4B,OAAO,QAAP;MACxB,EAAE,QAAF,CAAW,QAAX,KAAwB,CAAC,SAAS,QAAT,CAAkB,QAAlB,CAA7B,EAA0D,OAAO,aAAa,QAAb,CAAP;MACtD,EAAE,QAAF,CAAW,QAAX,CAAJ,EAA0B,OAAO,UAAS,KAAT,EAAgB;WAAS,MAAM,GAAN,CAAU,QAAV,CAAP;GAAzB;SACnB,QAAP;CAJF;AAMA,IAAI,eAAe,SAAf,YAAe,CAAS,KAAT,EAAgB;MAC7B,UAAU,EAAE,OAAF,CAAU,KAAV,CAAd;SACO,UAAS,KAAT,EAAgB;WACd,QAAQ,MAAM,UAAd,CAAP;GADF;CAFF;;;;;;;;AAaA,AAAO,IAAI,SAAS,SAAT,MAAS,CAAS,UAAT,EAAqB,WAArB,EAAkC;MAChD,SAAS,IAAb;MACI,KAAJ;;;;;MAKI,cAAc,EAAE,GAAF,CAAM,UAAN,EAAkB,aAAlB,CAAlB,EAAoD;YAC1C,WAAW,WAAnB;GADF,MAEO;YACG,iBAAU;aAAS,OAAO,KAAP,CAAa,IAAb,EAAmB,SAAnB,CAAP;KAApB;;;;IAIA,MAAF,CAAS,KAAT,EAAgB,MAAhB,EAAwB,WAAxB;;;;QAIM,SAAN,GAAkB,EAAE,MAAF,CAAS,OAAO,SAAhB,EAA2B,UAA3B,CAAlB;QACM,SAAN,CAAgB,WAAhB,GAA8B,KAA9B;;;;QAIM,SAAN,GAAkB,OAAO,SAAzB;;SAEO,KAAP;CAzBK;;;;;;;;;;;AAqCP,AAAO,IAAI,YAAY,SAAZ,SAAY,CAAS,KAAT,EAAgB,OAAhB,EAAyB;MAC1C,QAAQ,QAAQ,KAApB;UACQ,KAAR,GAAgB,UAAS,IAAT,EAAe;QACzB,KAAJ,EAAW,MAAM,IAAN,CAAW,QAAQ,OAAnB,EAA4B,KAA5B,EAAmC,IAAnC,EAAyC,OAAzC;UACL,OAAN,CAAc,OAAd,EAAuB,KAAvB,EAA8B,IAA9B,EAAoC,OAApC;GAFF;CAFK;;AC7FP;;;;;;;;;;AAUA,AAAO,IAAI,QAAQ,SAAR,KAAQ,CAAS,UAAT,EAAqB,OAArB,EAA8B;MAC3C,QAAQ,cAAc,EAA1B;cACY,UAAU,EAAtB;OACK,aAAL,CAAmB,KAAnB,CAAyB,IAAzB,EAA+B,SAA/B;OACK,GAAL,GAAW,EAAE,QAAF,CAAW,KAAK,SAAhB,CAAX;OACK,UAAL,GAAkB,EAAlB;MACI,QAAQ,UAAZ,EAAwB,KAAK,UAAL,GAAkB,QAAQ,UAA1B;MACpB,QAAQ,KAAZ,EAAmB,QAAQ,KAAK,KAAL,CAAW,KAAX,EAAkB,OAAlB,KAA8B,EAAtC;MACfC,cAAW,EAAE,MAAF,CAAS,IAAT,EAAe,UAAf,CAAf;UACQ,EAAE,QAAF,CAAW,EAAE,MAAF,CAAS,EAAT,EAAaA,WAAb,EAAuB,KAAvB,CAAX,EAA0CA,WAA1C,CAAR;OACK,GAAL,CAAS,KAAT,EAAgB,OAAhB;OACK,OAAL,GAAe,EAAf;OACK,UAAL,CAAgB,KAAhB,CAAsB,IAAtB,EAA4B,SAA5B;CAZK;;AAeP,MAAM,MAAN,GAAeC,MAAf;;;AAGA,EAAE,MAAF,CAAS,MAAM,SAAf,EAA0B,MAA1B,EAAkC;;;WAGvB,IAHuB;;;mBAMf,IANe;;;;eAUnB,IAVmB;;;;aAcrB,GAdqB;;;;iBAkBjB,yBAAU,EAlBO;;;;cAsBpB,sBAAU,EAtBU;;;UAyBxB,gBAAS,OAAT,EAAkB;WACjB,EAAE,KAAF,CAAQ,KAAK,UAAb,CAAP;GA1B8B;;;;QA+B1B,gBAAW;WACR,SAAS,IAAT,CAAc,KAAd,CAAoB,IAApB,EAA0B,SAA1B,CAAP;GAhC8B;;;OAoC3B,aAAS,IAAT,EAAe;WACX,KAAK,UAAL,CAAgB,IAAhB,CAAP;GArC8B;;;UAyCxB,gBAAS,IAAT,EAAe;WACd,EAAE,MAAF,CAAS,KAAK,GAAL,CAAS,IAAT,CAAT,CAAP;GA1C8B;;;;OA+C3B,aAAS,IAAT,EAAe;WACX,KAAK,GAAL,CAAS,IAAT,KAAkB,IAAzB;GAhD8B;;;WAoDvB,iBAAS,KAAT,EAAgB;WAChB,CAAC,CAAC,EAAE,QAAF,CAAW,KAAX,EAAkB,IAAlB,EAAwB,KAAK,UAA7B,CAAT;GArD8B;;;;;OA2D3B,aAAS,GAAT,EAAc,GAAd,EAAmB,OAAnB,EAA4B;QAC3B,OAAO,IAAX,EAAiB,OAAO,IAAP;;;QAGb,KAAJ;QACI,QAAO,GAAP,yCAAO,GAAP,OAAe,QAAnB,EAA6B;cACnB,GAAR;gBACU,GAAV;KAFF,MAGO;OACJ,QAAQ,EAAT,EAAa,GAAb,IAAoB,GAApB;;;gBAGU,UAAU,EAAtB;;;QAGI,CAAC,KAAK,SAAL,CAAe,KAAf,EAAsB,OAAtB,CAAL,EAAqC,OAAO,KAAP;;;QAGjC,QAAa,QAAQ,KAAzB;QACI,SAAa,QAAQ,MAAzB;QACI,UAAa,EAAjB;QACI,WAAa,KAAK,SAAtB;SACK,SAAL,GAAiB,IAAjB;;QAEI,CAAC,QAAL,EAAe;WACR,mBAAL,GAA2B,EAAE,KAAF,CAAQ,KAAK,UAAb,CAA3B;WACK,OAAL,GAAe,EAAf;;;QAGE,UAAU,KAAK,UAAnB;QACI,UAAU,KAAK,OAAnB;QACI,OAAU,KAAK,mBAAnB;;;SAGK,IAAI,IAAT,IAAiB,KAAjB,EAAwB;YAChB,MAAM,IAAN,CAAN;UACI,CAAC,EAAE,OAAF,CAAU,QAAQ,IAAR,CAAV,EAAyB,GAAzB,CAAL,EAAoC,QAAQ,IAAR,CAAa,IAAb;UAChC,CAAC,EAAE,OAAF,CAAU,KAAK,IAAL,CAAV,EAAsB,GAAtB,CAAL,EAAiC;gBACvB,IAAR,IAAgB,GAAhB;OADF,MAEO;eACE,QAAQ,IAAR,CAAP;;cAEM,OAAO,QAAQ,IAAR,CAAf,GAA+B,QAAQ,IAAR,IAAgB,GAA/C;;;;QAIE,KAAK,WAAL,IAAoB,KAAxB,EAA+B,KAAK,EAAL,GAAU,KAAK,GAAL,CAAS,KAAK,WAAd,CAAV;;;QAG3B,CAAC,MAAL,EAAa;UACP,QAAQ,MAAZ,EAAoB,KAAK,QAAL,GAAgB,OAAhB;WACf,IAAI,IAAI,CAAb,EAAgB,IAAI,QAAQ,MAA5B,EAAoC,GAApC,EAAyC;aAClC,OAAL,CAAa,YAAY,QAAQ,CAAR,CAAzB,EAAqC,IAArC,EAA2C,QAAQ,QAAQ,CAAR,CAAR,CAA3C,EAAgE,OAAhE;;;;;;QAMA,QAAJ,EAAc,OAAO,IAAP;QACV,CAAC,MAAL,EAAa;aACJ,KAAK,QAAZ,EAAsB;kBACV,KAAK,QAAf;aACK,QAAL,GAAgB,KAAhB;aACK,OAAL,CAAa,QAAb,EAAuB,IAAvB,EAA6B,OAA7B;;;SAGC,QAAL,GAAgB,KAAhB;SACK,SAAL,GAAiB,KAAjB;WACO,IAAP;GA/H8B;;;;SAoIzB,eAAS,IAAT,EAAe,OAAf,EAAwB;WACtB,KAAK,GAAL,CAAS,IAAT,EAAe,KAAK,CAApB,EAAuB,EAAE,MAAF,CAAS,EAAT,EAAa,OAAb,EAAsB,EAAC,OAAO,IAAR,EAAtB,CAAvB,CAAP;GArI8B;;;SAyIzB,eAAS,OAAT,EAAkB;QACnB,QAAQ,EAAZ;SACK,IAAI,GAAT,IAAgB,KAAK,UAArB;YAAuC,GAAN,IAAa,KAAK,CAAlB;KACjC,OAAO,KAAK,GAAL,CAAS,KAAT,EAAgB,EAAE,MAAF,CAAS,EAAT,EAAa,OAAb,EAAsB,EAAC,OAAO,IAAR,EAAtB,CAAhB,CAAP;GA5I8B;;;;cAiJpB,oBAAS,IAAT,EAAe;QACrB,QAAQ,IAAZ,EAAkB,OAAO,CAAC,EAAE,OAAF,CAAU,KAAK,OAAf,CAAR;WACX,EAAE,GAAF,CAAM,KAAK,OAAX,EAAoB,IAApB,CAAP;GAnJ8B;;;;;;;;qBA4Jb,2BAAS,IAAT,EAAe;QAC5B,CAAC,IAAL,EAAW,OAAO,KAAK,UAAL,KAAoB,EAAE,KAAF,CAAQ,KAAK,OAAb,CAApB,GAA4C,KAAnD;QACP,MAAM,KAAK,SAAL,GAAiB,KAAK,mBAAtB,GAA4C,KAAK,UAA3D;QACI,UAAU,EAAd;QACI,UAAJ;SACK,IAAI,IAAT,IAAiB,IAAjB,EAAuB;UACjB,MAAM,KAAK,IAAL,CAAV;UACI,EAAE,OAAF,CAAU,IAAI,IAAJ,CAAV,EAAqB,GAArB,CAAJ,EAA+B;cACvB,IAAR,IAAgB,GAAhB;mBACa,IAAb;;WAEK,aAAa,OAAb,GAAuB,KAA9B;GAvK8B;;;;YA4KtB,kBAAS,IAAT,EAAe;QACnB,QAAQ,IAAR,IAAgB,CAAC,KAAK,mBAA1B,EAA+C,OAAO,IAAP;WACxC,KAAK,mBAAL,CAAyB,IAAzB,CAAP;GA9K8B;;;;sBAmLZ,8BAAW;WACtB,EAAE,KAAF,CAAQ,KAAK,mBAAb,CAAP;GApL8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WAkQvB,iBAAS,OAAT,EAAkB;cACf,UAAU,EAAE,KAAF,CAAQ,OAAR,CAAV,GAA6B,EAAvC;QACI,QAAQ,IAAZ;QACI,UAAU,QAAQ,OAAtB;QACI,OAAO,KAAX;;QAEI,UAAU,SAAV,OAAU,GAAW;YACjB,aAAN;YACM,OAAN,CAAc,SAAd,EAAyB,KAAzB,EAAgC,MAAM,UAAtC,EAAkD,OAAlD;KAFF;;YAKQ,OAAR,GAAkB,UAAS,IAAT,EAAe;UAC3B,IAAJ,EAAU;UACN,OAAJ,EAAa,QAAQ,IAAR,CAAa,QAAQ,OAArB,EAA8B,KAA9B,EAAqC,IAArC,EAA2C,OAA3C;UACT,CAAC,MAAM,KAAN,EAAL,EAAoB,MAAM,OAAN,CAAc,MAAd,EAAsB,KAAtB,EAA6B,IAA7B,EAAmC,OAAnC;KAHtB;;QAMI,MAAM,KAAV;QACI,KAAK,KAAL,EAAJ,EAAkB;QACd,KAAF,CAAQ,QAAQ,OAAhB;KADF,MAEO;gBACK,IAAV,EAAgB,OAAhB;;;QAGE,CAAC,IAAL,EAAW;WACJ,GAAP;GA3R8B;;;;;;;;;;;;;;;;;SA6SzB,eAAS,IAAT,EAAe,OAAf,EAAwB;WACtB,IAAP;GA9S8B;;;SAkTzB,iBAAW;WACT,IAAI,KAAK,WAAT,CAAqB,KAAK,UAA1B,CAAP;GAnT8B;;;SAuTzB,iBAAW;WACT,CAAC,KAAK,GAAL,CAAS,KAAK,WAAd,CAAR;GAxT8B;;;WA4TvB,iBAAS,OAAT,EAAkB;WAClB,KAAK,SAAL,CAAe,EAAf,EAAmB,EAAE,MAAF,CAAS,EAAT,EAAa,OAAb,EAAsB,EAAC,UAAU,IAAX,EAAtB,CAAnB,CAAP;GA7T8B;;;;aAkUrB,mBAAS,KAAT,EAAgB,OAAhB,EAAyB;QAC9B,CAAC,QAAQ,QAAT,IAAqB,CAAC,KAAK,QAA/B,EAAyC,OAAO,IAAP;YACjC,EAAE,MAAF,CAAS,EAAT,EAAa,KAAK,UAAlB,EAA8B,KAA9B,CAAR;QACI,QAAQ,KAAK,eAAL,GAAuB,KAAK,QAAL,CAAc,KAAd,EAAqB,OAArB,KAAiC,IAApE;QACI,CAAC,KAAL,EAAY,OAAO,IAAP;SACP,OAAL,CAAa,SAAb,EAAwB,IAAxB,EAA8B,KAA9B,EAAqC,EAAE,MAAF,CAAS,OAAT,EAAkB,EAAC,iBAAiB,KAAlB,EAAlB,CAArC;WACO,KAAP;;;CAxUJ;;;;AA+UA,IAAI,eAAe,EAAC,MAAM,CAAP,EAAU,QAAQ,CAAlB,EAAqB,OAAO,CAA5B,EAA+B,QAAQ,CAAvC,EAA0C,MAAM,CAAhD;QACT,CADS,EACN,OAAO,CADD,EACI,SAAS,CADb,EAAnB;;;AAIA,qBAAqB,KAArB,EAA4B,YAA5B,EAA0C,YAA1C;;AC9WA;AACA,IAAM,SAAQ,MAAM,SAAN,CAAgB,KAA9B;;;;;;;;;;;;;;;AAeA,AAAO,IAAI,aAAa,SAAb,UAAa,CAAS,MAAT,EAAiB,OAAjB,EAA0B;cACpC,UAAU,EAAtB;OACK,aAAL,CAAmB,KAAnB,CAAyB,IAAzB,EAA+B,SAA/B;MACI,QAAQ,KAAZ,EAAmB,KAAK,KAAL,GAAa,QAAQ,KAArB;MACf,QAAQ,UAAR,KAAuB,KAAK,CAAhC,EAAmC,KAAK,UAAL,GAAkB,QAAQ,UAA1B;OAC9B,MAAL;OACK,UAAL,CAAgB,KAAhB,CAAsB,IAAtB,EAA4B,SAA5B;MACI,MAAJ,EAAY,KAAK,KAAL,CAAW,MAAX,EAAmB,EAAE,MAAF,CAAS,EAAC,QAAQ,IAAT,EAAT,EAAyB,OAAzB,CAAnB;CAPP;;AAUP,WAAW,MAAX,GAAoBA,MAApB;;;AAGA,IAAI,aAAa,EAAC,KAAK,IAAN,EAAY,QAAQ,IAApB,EAA0B,OAAO,IAAjC,EAAjB;AACA,IAAI,aAAa,EAAC,KAAK,IAAN,EAAY,QAAQ,KAApB,EAAjB;;;AAGA,IAAI,SAAS,SAAT,MAAS,CAAS,KAAT,EAAgB,MAAhB,EAAwB,EAAxB,EAA4B;OAClC,KAAK,GAAL,CAAS,KAAK,GAAL,CAAS,EAAT,EAAa,CAAb,CAAT,EAA0B,MAAM,MAAhC,CAAL;MACI,OAAO,MAAM,MAAM,MAAN,GAAe,EAArB,CAAX;MACI,SAAS,OAAO,MAApB;MACI,CAAJ;OACK,IAAI,CAAT,EAAY,IAAI,KAAK,MAArB,EAA6B,GAA7B;SAAuC,CAAL,IAAU,MAAM,IAAI,EAAV,CAAV;GAClC,KAAK,IAAI,CAAT,EAAY,IAAI,MAAhB,EAAwB,GAAxB;UAAmC,IAAI,EAAV,IAAgB,OAAO,CAAP,CAAhB;GAC7B,KAAK,IAAI,CAAT,EAAY,IAAI,KAAK,MAArB,EAA6B,GAA7B;UAAwC,IAAI,MAAJ,GAAa,EAAnB,IAAyB,KAAK,CAAL,CAAzB;;CAPpC;;;AAWA,EAAE,MAAF,CAAS,WAAW,SAApB,EAA+B,MAA/B,EAAuC;;;;SAI9B,KAJ8B;;;;iBAStB,yBAAU,EATY;;;;cAazB,sBAAU,EAbe;;;;UAiB7B,gBAAS,OAAT,EAAkB;WACjB,KAAK,GAAL,CAAS,UAAS,KAAT,EAAgB;aAAS,MAAM,MAAN,CAAa,OAAb,CAAP;KAA3B,CAAP;GAlBmC;;;;;;;;;;OA6BhC,aAAS,MAAT,EAAiB,OAAjB,EAA0B;WACtB,KAAK,GAAL,CAAS,MAAT,EAAiB,EAAE,MAAF,CAAS,EAAC,OAAO,KAAR,EAAT,EAAyB,OAAzB,EAAkC,UAAlC,CAAjB,CAAP;GA9BmC;;;UAkC7B,gBAAS,MAAT,EAAiB,OAAjB,EAA0B;cACtB,EAAE,MAAF,CAAS,EAAT,EAAa,OAAb,CAAV;QACI,WAAW,CAAC,EAAE,OAAF,CAAU,MAAV,CAAhB;aACS,WAAW,CAAC,MAAD,CAAX,GAAsB,OAAO,KAAP,EAA/B;QACI,UAAU,KAAK,aAAL,CAAmB,MAAnB,EAA2B,OAA3B,CAAd;QACI,CAAC,QAAQ,MAAT,IAAmB,QAAQ,MAA/B,EAAuC;cAC7B,OAAR,GAAkB,EAAC,OAAO,EAAR,EAAY,QAAQ,EAApB,EAAwB,SAAS,OAAjC,EAAlB;WACK,OAAL,CAAa,QAAb,EAAuB,IAAvB,EAA6B,OAA7B;;WAEK,WAAW,QAAQ,CAAR,CAAX,GAAwB,OAA/B;GA3CmC;;;;;;OAkDhC,aAAS,MAAT,EAAiB,OAAjB,EAA0B;QACzB,UAAU,IAAd,EAAoB;;cAEV,EAAE,MAAF,CAAS,EAAT,EAAa,UAAb,EAAyB,OAAzB,CAAV;QACI,QAAQ,KAAR,IAAiB,CAAC,KAAK,QAAL,CAAc,MAAd,CAAtB,EAA6C;eAClC,KAAK,KAAL,CAAW,MAAX,EAAmB,OAAnB,KAA+B,EAAxC;;;QAGE,WAAW,CAAC,EAAE,OAAF,CAAU,MAAV,CAAhB;aACS,WAAW,CAAC,MAAD,CAAX,GAAsB,OAAO,KAAP,EAA/B;;QAEI,KAAK,QAAQ,EAAjB;QACI,MAAM,IAAV,EAAgB,KAAK,CAAC,EAAN;QACZ,KAAK,KAAK,MAAd,EAAsB,KAAK,KAAK,MAAV;QAClB,KAAK,CAAT,EAAY,MAAM,KAAK,MAAL,GAAc,CAApB;;QAER,MAAM,EAAV;QACI,QAAQ,EAAZ;QACI,UAAU,EAAd;QACI,WAAW,EAAf;QACI,WAAW,EAAf;;QAEI,MAAM,QAAQ,GAAlB;QACI,QAAQ,QAAQ,KAApB;QACI,SAAS,QAAQ,MAArB;;QAEI,OAAO,KAAX;QACI,WAAW,KAAK,UAAL,IAAmB,MAAM,IAAzB,IAAiC,QAAQ,IAAR,KAAiB,KAAjE;QACI,WAAW,EAAE,QAAF,CAAW,KAAK,UAAhB,IAA8B,KAAK,UAAnC,GAAgD,IAA/D;;;;QAII,KAAJ,EAAW,CAAX;SACK,IAAI,CAAT,EAAY,IAAI,OAAO,MAAvB,EAA+B,GAA/B,EAAoC;cAC1B,OAAO,CAAP,CAAR;;;;UAII,WAAW,KAAK,GAAL,CAAS,KAAT,CAAf;UACI,QAAJ,EAAc;YACR,SAAS,UAAU,QAAvB,EAAiC;cAC3B,QAAQ,KAAK,QAAL,CAAc,KAAd,IAAuB,MAAM,UAA7B,GAA0C,KAAtD;cACI,QAAQ,KAAZ,EAAmB,QAAQ,SAAS,KAAT,CAAe,KAAf,EAAsB,OAAtB,CAAR;mBACV,GAAT,CAAa,KAAb,EAAoB,OAApB;kBACQ,IAAR,CAAa,QAAb;cACI,YAAY,CAAC,IAAjB,EAAuB,OAAO,SAAS,UAAT,CAAoB,QAApB,CAAP;;YAErB,CAAC,SAAS,SAAS,GAAlB,CAAL,EAA6B;mBAClB,SAAS,GAAlB,IAAyB,IAAzB;cACI,IAAJ,CAAS,QAAT;;eAEK,CAAP,IAAY,QAAZ;;;OAZF,MAeO,IAAI,GAAJ,EAAS;gBACN,OAAO,CAAP,IAAY,KAAK,aAAL,CAAmB,KAAnB,EAA0B,OAA1B,CAApB;YACI,KAAJ,EAAW;gBACH,IAAN,CAAW,KAAX;eACK,aAAL,CAAmB,KAAnB,EAA0B,OAA1B;mBACS,MAAM,GAAf,IAAsB,IAAtB;cACI,IAAJ,CAAS,KAAT;;;;;;QAMF,MAAJ,EAAY;WACL,IAAI,CAAT,EAAY,IAAI,KAAK,MAArB,EAA6B,GAA7B,EAAkC;gBACxB,KAAK,MAAL,CAAY,CAAZ,CAAR;YACI,CAAC,SAAS,MAAM,GAAf,CAAL,EAA0B,SAAS,IAAT,CAAc,KAAd;;UAExB,SAAS,MAAb,EAAqB,KAAK,aAAL,CAAmB,QAAnB,EAA6B,OAA7B;;;;QAInB,eAAe,KAAnB;QACI,UAAU,CAAC,QAAD,IAAa,GAAb,IAAoB,MAAlC;QACI,IAAI,MAAJ,IAAc,OAAlB,EAA2B;qBACV,KAAK,MAAL,KAAgB,IAAI,MAApB,IAA8B,EAAE,IAAF,CAAO,KAAK,MAAZ,EAAoB,UAAS,CAAT,EAAY,KAAZ,EAAmB;eAC3E,MAAM,IAAI,KAAJ,CAAb;OAD2C,CAA7C;WAGK,MAAL,CAAY,MAAZ,GAAqB,CAArB;aACO,KAAK,MAAZ,EAAoB,GAApB,EAAyB,CAAzB;WACK,MAAL,GAAc,KAAK,MAAL,CAAY,MAA1B;KANF,MAOO,IAAI,MAAM,MAAV,EAAkB;UACnB,QAAJ,EAAc,OAAO,IAAP;aACP,KAAK,MAAZ,EAAoB,KAApB,EAA2B,MAAM,IAAN,GAAa,KAAK,MAAlB,GAA2B,EAAtD;WACK,MAAL,GAAc,KAAK,MAAL,CAAY,MAA1B;;;;QAIE,IAAJ,EAAU,KAAK,IAAL,CAAU,EAAC,QAAQ,IAAT,EAAV;;;QAGN,CAAC,QAAQ,MAAb,EAAqB;WACd,IAAI,CAAT,EAAY,IAAI,MAAM,MAAtB,EAA8B,GAA9B,EAAmC;YAC7B,MAAM,IAAV,EAAgB,QAAQ,KAAR,GAAgB,KAAK,CAArB;gBACR,MAAM,CAAN,CAAR;cACM,OAAN,CAAc,KAAd,EAAqB,KAArB,EAA4B,IAA5B,EAAkC,OAAlC;;UAEE,QAAQ,YAAZ,EAA0B,KAAK,OAAL,CAAa,MAAb,EAAqB,IAArB,EAA2B,OAA3B;UACtB,MAAM,MAAN,IAAgB,SAAS,MAAzB,IAAmC,QAAQ,MAA/C,EAAuD;gBAC7C,OAAR,GAAkB;iBACT,KADS;mBAEP,QAFO;kBAGR;SAHV;aAKK,OAAL,CAAa,QAAb,EAAuB,IAAvB,EAA6B,OAA7B;;;;;WAKG,WAAW,OAAO,CAAP,CAAX,GAAuB,MAA9B;GAlKmC;;;;;;SAyK9B,eAAS,MAAT,EAAiB,OAAjB,EAA0B;cACrB,UAAU,EAAE,KAAF,CAAQ,OAAR,CAAV,GAA6B,EAAvC;SACK,IAAI,IAAI,CAAb,EAAgB,IAAI,KAAK,MAAL,CAAY,MAAhC,EAAwC,GAAxC,EAA6C;WACtC,gBAAL,CAAsB,KAAK,MAAL,CAAY,CAAZ,CAAtB,EAAsC,OAAtC;;YAEM,cAAR,GAAyB,KAAK,MAA9B;SACK,MAAL;aACS,KAAK,GAAL,CAAS,MAAT,EAAiB,EAAE,MAAF,CAAS,EAAC,QAAQ,IAAT,EAAT,EAAyB,OAAzB,CAAjB,CAAT;QACI,CAAC,QAAQ,MAAb,EAAqB,KAAK,OAAL,CAAa,OAAb,EAAsB,IAAtB,EAA4B,OAA5B;WACd,MAAP;GAlLmC;;;QAsL/B,cAAS,KAAT,EAAgB,OAAhB,EAAyB;WACtB,KAAK,GAAL,CAAS,KAAT,EAAgB,EAAE,MAAF,CAAS,EAAC,IAAI,KAAK,MAAV,EAAT,EAA4B,OAA5B,CAAhB,CAAP;GAvLmC;;;OA2LhC,aAAS,OAAT,EAAkB;QACjB,QAAQ,KAAK,EAAL,CAAQ,KAAK,MAAL,GAAc,CAAtB,CAAZ;WACO,KAAK,MAAL,CAAY,KAAZ,EAAmB,OAAnB,CAAP;GA7LmC;;;WAiM5B,iBAAS,KAAT,EAAgB,OAAhB,EAAyB;WACzB,KAAK,GAAL,CAAS,KAAT,EAAgB,EAAE,MAAF,CAAS,EAAC,IAAI,CAAL,EAAT,EAAkB,OAAlB,CAAhB,CAAP;GAlMmC;;;SAsM9B,eAAS,OAAT,EAAkB;QACnB,QAAQ,KAAK,EAAL,CAAQ,CAAR,CAAZ;WACO,KAAK,MAAL,CAAY,KAAZ,EAAmB,OAAnB,CAAP;GAxMmC;;;SA4M9B,iBAAW;WACT,OAAM,KAAN,CAAY,KAAK,MAAjB,EAAyB,SAAzB,CAAP;GA7MmC;;;;OAkNhC,aAAS,GAAT,EAAc;QACb,OAAO,IAAX,EAAiB,OAAO,KAAK,CAAZ;WACV,KAAK,KAAL,CAAW,GAAX,KACL,KAAK,KAAL,CAAW,KAAK,OAAL,CAAa,IAAI,UAAJ,IAAkB,GAA/B,CAAX,CADK,IAEL,IAAI,GAAJ,IAAW,KAAK,KAAL,CAAW,IAAI,GAAf,CAFb;GApNmC;;;OA0NhC,aAAS,GAAT,EAAc;WACV,KAAK,GAAL,CAAS,GAAT,KAAiB,IAAxB;GA3NmC;;;MA+NjC,YAAS,KAAT,EAAgB;QACd,QAAQ,CAAZ,EAAe,SAAS,KAAK,MAAd;WACR,KAAK,MAAL,CAAY,KAAZ,CAAP;GAjOmC;;;;SAsO9B,eAAS,KAAT,EAAgB,KAAhB,EAAuB;WACrB,KAAK,QAAQ,MAAR,GAAiB,QAAtB,EAAgC,KAAhC,CAAP;GAvOmC;;;;aA4O1B,mBAAS,KAAT,EAAgB;WAClB,KAAK,KAAL,CAAW,KAAX,EAAkB,IAAlB,CAAP;GA7OmC;;;;;QAmP/B,cAAS,OAAT,EAAkB;QAClB,aAAa,KAAK,UAAtB;QACI,CAAC,UAAL,EAAiB,MAAM,IAAI,KAAJ,CAAU,wCAAV,CAAN;gBACL,UAAU,EAAtB;;QAEI,SAAS,WAAW,MAAxB;QACI,EAAE,UAAF,CAAa,UAAb,CAAJ,EAA8B,aAAa,EAAE,IAAF,CAAO,UAAP,EAAmB,IAAnB,CAAb;;;QAG1B,WAAW,CAAX,IAAgB,EAAE,QAAF,CAAW,UAAX,CAApB,EAA4C;WACrC,MAAL,GAAc,KAAK,MAAL,CAAY,UAAZ,CAAd;KADF,MAEO;WACA,MAAL,CAAY,IAAZ,CAAiB,UAAjB;;QAEE,CAAC,QAAQ,MAAb,EAAqB,KAAK,OAAL,CAAa,MAAb,EAAqB,IAArB,EAA2B,OAA3B;WACd,IAAP;GAlQmC;;;SAsQ9B,eAAS,IAAT,EAAe;WACb,KAAK,GAAL,CAAS,OAAO,EAAhB,CAAP;GAvQmC;;;;;;;;;;;;;;;;;;;;;;UA8R7B,gBAAS,KAAT,EAAgB,OAAhB,EAAyB;cACrB,UAAU,EAAE,KAAF,CAAQ,OAAR,CAAV,GAA6B,EAAvC;QACI,OAAO,KAAX,CAF+B;YAGvB,KAAK,aAAL,CAAmB,KAAnB,EAA0B,OAA1B,CAAR;QACI,CAAC,KAAL,EAAY,OAAO,KAAP;QACR,CAAC,IAAL,EAAW,KAAK,GAAL,CAAS,KAAT,EAAgB,OAAhB;QACP,aAAa,IAAjB;QACI,UAAU,QAAQ,OAAtB;;;QAGM,OAAJ,EAAa,QAAQ,IAAR,CAAa,aAAa,OAA1B,EAAmC,CAAnC,EAAsC,IAAtC,EAA4C,YAA5C;;;WAGR,KAAP;GA3SmC;;;;SAgT9B,eAAS,IAAT,EAAe,OAAf,EAAwB;WACtB,IAAP;GAjTmC;;;SAqT9B,iBAAW;WACT,IAAI,KAAK,WAAT,CAAqB,KAAK,MAA1B,EAAkC;aAChC,KAAK,KAD2B;kBAE3B,KAAK;KAFZ,CAAP;GAtTmC;;;WA6T5B,iBAAS,KAAT,EAAgB;WAChB,MAAM,KAAK,KAAL,CAAW,SAAX,CAAqB,WAArB,IAAoC,IAA1C,CAAP;GA9TmC;;;UAkU7B,kBAAW;WACV,IAAI,kBAAJ,CAAuB,IAAvB,EAA6B,eAA7B,CAAP;GAnUmC;;;QAuU/B,gBAAW;WACR,IAAI,kBAAJ,CAAuB,IAAvB,EAA6B,aAA7B,CAAP;GAxUmC;;;WA4U5B,mBAAW;WACX,IAAI,kBAAJ,CAAuB,IAAvB,EAA6B,mBAA7B,CAAP;GA7UmC;;;;UAkV7B,kBAAW;SACZ,MAAL,GAAc,CAAd;SACK,MAAL,GAAc,EAAd;SACK,KAAL,GAAc,EAAd;GArVmC;;;;iBA0VtB,uBAAS,KAAT,EAAgB,OAAhB,EAAyB;QAClC,KAAK,QAAL,CAAc,KAAd,CAAJ,EAA0B;UACpB,CAAC,MAAM,UAAX,EAAuB,MAAM,UAAN,GAAmB,IAAnB;aAChB,KAAP;;cAEQ,UAAU,EAAE,KAAF,CAAQ,OAAR,CAAV,GAA6B,EAAvC;YACQ,UAAR,GAAqB,IAArB;QACI,QAAQ,IAAI,KAAK,KAAT,CAAe,KAAf,EAAsB,OAAtB,CAAZ;QACI,CAAC,MAAM,eAAX,EAA4B,OAAO,KAAP;SACvB,OAAL,CAAa,SAAb,EAAwB,IAAxB,EAA8B,MAAM,eAApC,EAAqD,OAArD;WACO,KAAP;GApWmC;;;iBAwWtB,uBAAS,MAAT,EAAiB,OAAjB,EAA0B;QACnC,UAAU,EAAd;SACK,IAAI,IAAI,CAAb,EAAgB,IAAI,OAAO,MAA3B,EAAmC,GAAnC,EAAwC;UAClC,QAAQ,KAAK,GAAL,CAAS,OAAO,CAAP,CAAT,CAAZ;UACI,CAAC,KAAL,EAAY;;UAER,QAAQ,KAAK,OAAL,CAAa,KAAb,CAAZ;WACK,MAAL,CAAY,MAAZ,CAAmB,KAAnB,EAA0B,CAA1B;WACK,MAAL;;;;aAIO,KAAK,KAAL,CAAW,MAAM,GAAjB,CAAP;UACI,KAAK,KAAK,OAAL,CAAa,MAAM,UAAnB,CAAT;UACI,MAAM,IAAV,EAAgB,OAAO,KAAK,KAAL,CAAW,EAAX,CAAP;;UAEZ,CAAC,QAAQ,MAAb,EAAqB;gBACX,KAAR,GAAgB,KAAhB;cACM,OAAN,CAAc,QAAd,EAAwB,KAAxB,EAA+B,IAA/B,EAAqC,OAArC;;;cAGM,IAAR,CAAa,KAAb;WACK,gBAAL,CAAsB,KAAtB,EAA6B,OAA7B;;WAEK,OAAP;GAhYmC;;;;YAqY3B,kBAAS,KAAT,EAAgB;WACjB,iBAAiB,KAAxB;GAtYmC;;;iBA0YtB,uBAAS,KAAT,EAAgB,OAAhB,EAAyB;SACjC,KAAL,CAAW,MAAM,GAAjB,IAAwB,KAAxB;QACI,KAAK,KAAK,OAAL,CAAa,MAAM,UAAnB,CAAT;QACI,MAAM,IAAV,EAAgB,KAAK,KAAL,CAAW,EAAX,IAAiB,KAAjB;UACV,EAAN,CAAS,KAAT,EAAgB,KAAK,aAArB,EAAoC,IAApC;GA9YmC;;;oBAkZnB,0BAAS,KAAT,EAAgB,OAAhB,EAAyB;WAClC,KAAK,KAAL,CAAW,MAAM,GAAjB,CAAP;QACI,KAAK,KAAK,OAAL,CAAa,MAAM,UAAnB,CAAT;QACI,MAAM,IAAV,EAAgB,OAAO,KAAK,KAAL,CAAW,EAAX,CAAP;QACZ,SAAS,MAAM,UAAnB,EAA+B,OAAO,MAAM,UAAb;UACzB,GAAN,CAAU,KAAV,EAAiB,KAAK,aAAtB,EAAqC,IAArC;GAvZmC;;;;;;iBA8ZtB,uBAAS,KAAT,EAAgB,KAAhB,EAAuB,UAAvB,EAAmC,OAAnC,EAA4C;QACrD,KAAJ,EAAW;UACL,CAAC,UAAU,KAAV,IAAmB,UAAU,QAA9B,KAA2C,eAAe,IAA9D,EAAoE;UAChE,UAAU,SAAd,EAAyB,KAAK,MAAL,CAAY,KAAZ,EAAmB,OAAnB;UACrB,UAAU,QAAd,EAAwB;YAClB,SAAS,KAAK,OAAL,CAAa,MAAM,kBAAN,EAAb,CAAb;YACI,KAAK,KAAK,OAAL,CAAa,MAAM,UAAnB,CAAT;YACI,WAAW,EAAf,EAAmB;cACb,UAAU,IAAd,EAAoB,OAAO,KAAK,KAAL,CAAW,MAAX,CAAP;cAChB,MAAM,IAAV,EAAgB,KAAK,KAAL,CAAW,EAAX,IAAiB,KAAjB;;;;SAIjB,OAAL,CAAa,KAAb,CAAmB,IAAnB,EAAyB,SAAzB;;;CA3aJ;;;;;AAmbA,IAAI,aAAa,OAAO,MAAP,KAAkB,UAAlB,IAAgC,OAAO,QAAxD;AACA,IAAI,UAAJ,EAAgB;aACH,SAAX,CAAqB,UAArB,IAAmC,WAAW,SAAX,CAAqB,MAAxD;;;;;;;;;;AAUF,IAAI,qBAAqB,SAArB,kBAAqB,CAAS,UAAT,EAAqB,IAArB,EAA2B;OAC7C,WAAL,GAAmB,UAAnB;OACK,KAAL,GAAa,IAAb;OACK,MAAL,GAAc,CAAd;CAHF;;;;;AASA,IAAI,kBAAkB,CAAtB;AACA,IAAI,gBAAgB,CAApB;AACA,IAAI,sBAAsB,CAA1B;;;AAGA,IAAI,UAAJ,EAAgB;qBACK,SAAnB,CAA6B,UAA7B,IAA2C,YAAW;WAC7C,IAAP;GADF;;;AAKF,mBAAmB,SAAnB,CAA6B,IAA7B,GAAoC,YAAW;MACzC,KAAK,WAAT,EAAsB;;;QAGhB,KAAK,MAAL,GAAc,KAAK,WAAL,CAAiB,MAAnC,EAA2C;UACrC,QAAQ,KAAK,WAAL,CAAiB,EAAjB,CAAoB,KAAK,MAAzB,CAAZ;WACK,MAAL;;;UAGI,KAAJ;UACI,KAAK,KAAL,KAAe,eAAnB,EAAoC;gBAC1B,KAAR;OADF,MAEO;YACD,KAAK,KAAK,WAAL,CAAiB,OAAjB,CAAyB,MAAM,UAA/B,CAAT;YACI,KAAK,KAAL,KAAe,aAAnB,EAAkC;kBACxB,EAAR;SADF,MAEO;;kBACG,CAAC,EAAD,EAAK,KAAL,CAAR;;;aAGG,EAAC,OAAO,KAAR,EAAe,MAAM,KAArB,EAAP;;;;;SAKG,WAAL,GAAmB,KAAK,CAAxB;;;SAGK,EAAC,OAAO,KAAK,CAAb,EAAgB,MAAM,IAAtB,EAAP;CA5BF;;;;;AAkCA,IAAI,oBAAoB,EAAC,SAAS,CAAV,EAAa,MAAM,CAAnB,EAAsB,KAAK,CAA3B,EAA8B,SAAS,CAAvC,EAA0C,QAAQ,CAAlD;SACb,CADa,EACV,QAAQ,CADE,EACC,aAAa,CADd,EACiB,OAAO,CADxB,EAC2B,MAAM,CADjC,EACoC,QAAQ,CAD5C,EAC+C,QAAQ,CADvD;UAEZ,CAFY,EAET,QAAQ,CAFC,EAEE,OAAO,CAFT,EAEY,KAAK,CAFjB,EAEoB,MAAM,CAF1B,EAE6B,KAAK,CAFlC,EAEqC,SAAS,CAF9C,EAEiD,UAAU,CAF3D;YAGV,CAHU,EAGP,QAAQ,CAHD,EAGI,KAAK,CAHT,EAGY,KAAK,CAHjB,EAGoB,SAAS,CAH7B,EAGgC,MAAM,CAHtC,EAGyC,OAAO,CAHhD;QAId,CAJc,EAIX,MAAM,CAJK,EAIF,SAAS,CAJP,EAIU,MAAM,CAJhB,EAImB,MAAM,CAJzB,EAI4B,MAAM,CAJlC,EAIqC,MAAM,CAJ3C;WAKX,CALW,EAKR,YAAY,CALJ,EAKO,SAAS,CALhB,EAKmB,SAAS,CAL5B,EAK+B,aAAa,CAL5C;WAMX,CANW,EAMR,OAAO,CANC,EAME,QAAQ,CANV,EAMa,WAAW,CANxB,EAM2B,SAAS,CANpC,EAMuC,SAAS,CANhD;UAOZ,CAPY,EAOT,SAAS,CAPA,EAOG,WAAW,CAPd,EAOiB,eAAe,CAPhC,EAAxB;;;AAUA,qBAAqB,UAArB,EAAiC,iBAAjC,EAAoD,QAApD,EAEA;;AC9iBA;;;;;;;;;;"}